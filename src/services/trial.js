import { getCurrentUser } from './telegram';

const API_BASE = process.env.REACT_APP_API_URL || 'https://ispeech-server.vercel.app';

// –ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ –ø—Ä–æ–±–Ω–æ–≥–æ –ø–µ—Ä–∏–æ–¥–∞
export const getTrialStatus = async () => {
  try {
    const user = getCurrentUser();
    console.log('üîç –ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ –ø—Ä–æ–±–Ω–æ–≥–æ –ø–µ—Ä–∏–æ–¥–∞ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', user);
    
    if (!user?.id) {
      console.log('‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –¥–µ–º–æ-—Å—Ç–∞—Ç—É—Å');
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º localStorage –¥–ª—è –¥–µ–º–æ-—Ä–µ–∂–∏–º–∞
      const hasSeenWelcome = localStorage.getItem('trialWelcomeSeen') === 'true';
      console.log('üì± Demo hasSeenWelcome:', hasSeenWelcome);
      // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –¥–µ–º–æ-—Å—Ç–∞—Ç—É—Å –¥–ª—è –ø–æ–∫–∞–∑–∞ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
      return {
        hasActiveSubscription: false,
        trial: {
          isActive: true,
          hasSeenWelcome: hasSeenWelcome,
          timeLeft: { days: 3, hours: 0, minutes: 0 },
          endDate: new Date(Date.now() + 3 * 24 * 60 * 60 * 1000).toISOString()
        }
      };
    }

    const response = await fetch(`${API_BASE}/api/trial/status/${user.id}?lang=${user.language_code || 'ru'}`);
    
    if (!response.ok) {
      console.log('‚ö†Ô∏è –°–µ—Ä–≤–µ—Ä –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –¥–µ–º–æ-—Å—Ç–∞—Ç—É—Å');
      // Fallback –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏
      return {
        hasActiveSubscription: false,
        trial: {
          isActive: true,
          hasSeenWelcome: false,
          timeLeft: { days: 3, hours: 0, minutes: 0 },
          endDate: new Date(Date.now() + 3 * 24 * 60 * 60 * 1000).toISOString()
        }
      };
    }

    const result = await response.json();
    console.log('‚úÖ –°—Ç–∞—Ç—É—Å –ø–æ–ª—É—á–µ–Ω —Å —Å–µ—Ä–≤–µ—Ä–∞:', result);
    return result;
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞ –ø—Ä–æ–±–Ω–æ–≥–æ –ø–µ—Ä–∏–æ–¥–∞:', error);
    // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –¥–µ–º–æ-—Å—Ç–∞—Ç—É—Å –≤ —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏
    return {
      hasActiveSubscription: false,
      trial: {
        isActive: true,
        hasSeenWelcome: false,
        timeLeft: { days: 3, hours: 0, minutes: 0 },
        endDate: new Date(Date.now() + 3 * 24 * 60 * 60 * 1000).toISOString()
      }
    };
  }
};

// –û—Ç–º–µ—Ç–∫–∞ –æ –ø—Ä–æ—Å–º–æ—Ç—Ä–µ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
export const markWelcomeSeen = async () => {
  try {
    const user = getCurrentUser();
    console.log('‚úÖ –û—Ç–º–µ—á–∞–µ–º –ø—Ä–æ—Å–º–æ—Ç—Ä –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', user?.id);
    
    if (!user?.id) {
      console.log('‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω, —Å–æ—Ö—Ä–∞–Ω—è–µ–º –≤ localStorage');
      // Fallback - —Å–æ—Ö—Ä–∞–Ω—è–µ–º –≤ localStorage
      localStorage.setItem('trialWelcomeSeen', 'true');
      return { success: true, method: 'localStorage' };
    }

    const response = await fetch(`${API_BASE}/api/trial/welcome-seen/${user.id}`, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      }
    });

    if (!response.ok) {
      console.log('‚ö†Ô∏è –°–µ—Ä–≤–µ—Ä –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω, —Å–æ—Ö—Ä–∞–Ω—è–µ–º –≤ localStorage');
      // Fallback - —Å–æ—Ö—Ä–∞–Ω—è–µ–º –≤ localStorage
      localStorage.setItem('trialWelcomeSeen', 'true');
      return { success: true, method: 'localStorage' };
    }

    const result = await response.json();
    console.log('‚úÖ –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ –æ—Ç–º–µ—á–µ–Ω–æ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ:', result);
    return result;
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –æ—Ç–º–µ—Ç–∫–∏ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è:', error);
    // Fallback - —Å–æ—Ö—Ä–∞–Ω—è–µ–º –≤ localStorage
    localStorage.setItem('trialWelcomeSeen', 'true');
    return { success: true, method: 'localStorage' };
  }
};

// –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ —Ñ—É–Ω–∫—Ü–∏–∏
export const checkAccess = async () => {
  try {
    const user = getCurrentUser();
    if (!user?.id) {
      return { hasAccess: false, reason: 'no_user' };
    }

    const response = await fetch(`${API_BASE}/api/trial/check-access/${user.id}`);
    if (!response.ok) {
      throw new Error('Failed to check access');
    }

    return await response.json();
  } catch (error) {
    console.error('Error checking access:', error);
    return { hasAccess: false, reason: 'error' };
  }
};

// –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–∏ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
export const formatTimeLeft = (timeLeft) => {
  if (!timeLeft) return '0–¥ 0—á 0–º';
  
  const { days, hours, minutes } = timeLeft;
  
  if (days > 0) {
    return `${days}–¥ ${hours}—á ${minutes}–º`;
  } else if (hours > 0) {
    return `${hours}—á ${minutes}–º`;
  } else {
    return `${minutes}–º`;
  }
};

// –õ–æ–∫–∞–ª–∏–∑–æ–≤–∞–Ω–Ω—ã–µ —Ç–µ–∫—Å—Ç—ã –¥–ª—è –ø—Ä–æ–±–Ω–æ–≥–æ –ø–µ—Ä–∏–æ–¥–∞
export const getTrialTexts = (language = 'ru') => {
  const isEnglish = language === 'en' || language?.startsWith('en');
  
  return {
    welcomeTitle: isEnglish ? 'Welcome to iSpeech Helper!' : '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ iSpeech Helper!',
    trialDescription: isEnglish ? 
      'You can use the app for FREE for 3 days with full access to all features!' :
      '–í—ã –º–æ–∂–µ—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ–º –ë–ï–°–ü–õ–ê–¢–ù–û 3 –¥–Ω—è —Å –ø–æ–ª–Ω—ã–º –¥–æ—Å—Ç—É–ø–æ–º –∫–æ –≤—Å–µ–º —Ñ—É–Ω–∫—Ü–∏—è–º!',
    premiumFeatures: isEnglish ? 'Premium features include:' : '–í –ø—Ä–µ–º–∏—É–º –ø–æ–¥–ø–∏—Å–∫—É –≤—Ö–æ–¥–∏—Ç:',
    feature1: isEnglish ? 'üéØ All speech exercises' : 'üéØ –í—Å–µ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è –¥–ª—è —Ä–µ—á–∏',
    feature2: isEnglish ? 'ü´Å Breathing exercises' : 'ü´Å –î—ã—Ö–∞—Ç–µ–ª—å–Ω—ã–µ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è', 
    feature3: isEnglish ? 'üé≠ Tongue twisters' : 'üé≠ –°–∫–æ—Ä–æ–≥–æ–≤–æ—Ä–∫–∏',
    feature4: isEnglish ? 'üìö Reading exercises' : 'üìö –£–ø—Ä–∞–∂–Ω–µ–Ω–∏—è –¥–ª—è —á—Ç–µ–Ω–∏—è',
    feature5: isEnglish ? 'üé® Emotions trainer' : 'üé® –¢—Ä–µ–Ω–∞–∂–µ—Ä —ç–º–æ—Ü–∏–π',
    feature6: isEnglish ? 'üìä Progress tracking' : 'üìä –û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞',
    startTrialButton: isEnglish ? 'Start Free Trial' : '–ù–∞—á–∞—Ç—å –±–µ—Å–ø–ª–∞—Ç–Ω—ã–π –ø–µ—Ä–∏–æ–¥',
    buyNowButton: isEnglish ? 'Buy Premium' : '–ö—É–ø–∏—Ç—å –ü—Ä–µ–º–∏—É–º',
    trialTimeLeft: isEnglish ? 'Trial time left:' : '–û—Å—Ç–∞–ª–æ—Å—å –ø—Ä–æ–±–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏:',
    trialExpired: isEnglish ? 'Trial period expired' : '–ü—Ä–æ–±–Ω—ã–π –ø–µ—Ä–∏–æ–¥ –∏—Å—Ç–µ–∫',
    subscribeNow: isEnglish ? 'Subscribe now to continue using all features' : '–û—Ñ–æ—Ä–º–∏—Ç–µ –ø–æ–¥–ø–∏—Å–∫—É, —á—Ç–æ–±—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –≤—Å–µ–º–∏ —Ñ—É–Ω–∫—Ü–∏—è–º–∏',
    trialActive: isEnglish ? 'Free trial active' : '–ë–µ—Å–ø–ª–∞—Ç–Ω—ã–π –ø–µ—Ä–∏–æ–¥ –∞–∫—Ç–∏–≤–µ–Ω',
    
    // –ù–æ–≤—ã–µ —Ç–µ–∫—Å—Ç—ã –¥–ª—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
    freeTrialChip: isEnglish ? '3 days FREE' : '3 –¥–Ω—è –ë–ï–°–ü–õ–ê–¢–ù–û',
    subscriptionNote: isEnglish ? 
      'After the trial period ends, you will need to purchase a subscription to continue using all features' :
      '–ü–æ—Å–ª–µ –æ–∫–æ–Ω—á–∞–Ω–∏—è –ø—Ä–æ–±–Ω–æ–≥–æ –ø–µ—Ä–∏–æ–¥–∞ –Ω—É–∂–Ω–æ –±—É–¥–µ—Ç –æ—Ñ–æ—Ä–º–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤—Å–µ—Ö —Ñ—É–Ω–∫—Ü–∏–π'
  };
}; 