import { getCurrentUser } from './telegram';
import { getStarsBalance as getReferralStarsBalance } from './referral';

// –ì–ª–æ–±–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã—Ö –ø–æ–ø–∞–ø–æ–≤
let isPopupOpen = false;

// –ó–∞–≥–ª—É—à–∫–∏ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å–æ –∑–≤–µ–∑–¥–∞–º–∏
export const getStarsBalance = async () => {
  return await getReferralStarsBalance();
};
export const addReferralStars = async () => false;
export const useStars = async () => false;

// –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ—Å—Ç–∏ –∑–≤–µ–∑–¥
export const hasEnoughStars = async (amount) => {
  const balance = await getStarsBalance();
  return balance >= amount;
};

// –ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è –≤ –∑–≤–µ–∑–¥—ã
export const convertToStars = (amount) => {
  return Math.ceil(amount / 100); // –ü—Ä–∏–º–µ—Ä–Ω—ã–π –∫—É—Ä—Å: 1 –∑–≤–µ–∑–¥–∞ = 100 –µ–¥–∏–Ω–∏—Ü
};

// –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –ø–æ–¥–ø–∏—Å–æ–∫
export const SUBSCRIPTION_PLANS = {
  monthly: {
    stars: 299,
    duration: 30,
    title: '–ú–µ—Å—è—á–Ω–∞—è –ø–æ–¥–ø–∏—Å–∫–∞',
    amount: 299,
    description: '–î–æ—Å—Ç—É–ø –∫–æ –≤—Å–µ–º —Ñ—É–Ω–∫—Ü–∏—è–º –Ω–∞ 30 –¥–Ω–µ–π.'
  },
  quarterly: {
    stars: 699,
    duration: 90,
    title: '–ö–≤–∞—Ä—Ç–∞–ª—å–Ω–∞—è –ø–æ–¥–ø–∏—Å–∫–∞',
    amount: 699,
    description: '–î–æ—Å—Ç—É–ø –∫–æ –≤—Å–µ–º —Ñ—É–Ω–∫—Ü–∏—è–º –Ω–∞ 90 –¥–Ω–µ–π.'
  },
  yearly: {
    stars: 1999,
    duration: 365,
    title: '–ì–æ–¥–æ–≤–∞—è –ø–æ–¥–ø–∏—Å–∫–∞',
    amount: 1999,
    description: '–î–æ—Å—Ç—É–ø –∫–æ –≤—Å–µ–º —Ñ—É–Ω–∫—Ü–∏—è–º –Ω–∞ 365 –¥–Ω–µ–π.'
  }
};

// –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ Telegram Stars
export const isStarsAvailable = () => {
  const webApp = window.Telegram?.WebApp;
  if (!webApp) return false;
  
  const hasUser = !!webApp.initDataUnsafe?.user;
  const hasVersion = webApp.isVersionAtLeast ? webApp.isVersionAtLeast('6.1') : true;
  // –£–±–∏—Ä–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É openInvoice, —Ç–∞–∫ –∫–∞–∫ –∏—Å–ø–æ–ª—å–∑—É–µ–º –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π –ø–æ–¥—Ö–æ–¥
  const hasTelegramLink = typeof webApp.openTelegramLink === 'function' || typeof webApp.openLink === 'function';
  
  console.log('Telegram WebApp platform:', webApp.platform);
  console.log('Has user:', hasUser);
  console.log('Version check:', hasVersion);
  console.log('Has openInvoice:', typeof webApp.openInvoice === 'function');
  console.log('Has openTelegramLink:', typeof webApp.openTelegramLink === 'function');
  console.log('WebApp version:', webApp.version);
  
  // Telegram Stars –¥–æ—Å—Ç—É–ø–Ω—ã –µ—Å–ª–∏ –µ—Å—Ç—å WebApp —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º –∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –æ—Ç–∫—Ä—ã—Ç—å —Å—Å—ã–ª–∫—É
  return hasUser && hasVersion && hasTelegramLink;
};

// –ò–Ω–∏—Ü–∏–∞—Ü–∏—è –ø–ª–∞—Ç–µ–∂–∞ —á–µ—Ä–µ–∑ Telegram Stars
export const purchaseWithStars = async (planType) => {
  try {
    // –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ: –≤—Å–µ–≥–¥–∞ –ø—Ä–∏–≤–æ–¥–∏–º —Ç–∏–ø –∫ —Å—Ç—Ä–æ–∫–µ –∏ –Ω–∏–∂–Ω–µ–º—É —Ä–µ–≥–∏—Å—Ç—Ä—É
    if (typeof planType !== 'string') {
      throw new Error('–¢–∏–ø –ø–æ–¥–ø–∏—Å–∫–∏ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —Å—Ç—Ä–æ–∫–æ–π');
    }
    planType = planType.toLowerCase();
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –æ—Ç–∫—Ä—ã—Ç –ª–∏ —É–∂–µ –ø–æ–ø–∞–ø
    if (isPopupOpen) {
      console.log('‚ö†Ô∏è –ü–æ–ø–∞–ø —É–∂–µ –æ—Ç–∫—Ä—ã—Ç, –∏–≥–Ω–æ—Ä–∏—Ä—É–µ–º –∑–∞–ø—Ä–æ—Å');
      return {
        success: false,
        cancelled: true,
        message: '–ü–æ–ø–∞–ø —É–∂–µ –æ—Ç–∫—Ä—ã—Ç'
      };
    }
    
    console.log('üåü –ü–æ–ø—ã—Ç–∫–∞ –ø–æ–∫—É–ø–∫–∏ –ø–æ–¥–ø–∏—Å–∫–∏:', planType);
    
    // –û–ø—Ä–µ–¥–µ–ª—è–µ–º URLs –≤ –Ω–∞—á–∞–ª–µ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ –≤–æ –≤—Å–µ—Ö –±–ª–æ–∫–∞—Ö
    const botUrl = 'https://t.me/iSpeechHelper_bot';
    const botUrlWithStart = 'https://t.me/iSpeechHelper_bot?start=buy_' + planType;
    
    const webApp = window.Telegram?.WebApp;
    if (!webApp) {
      throw new Error('Telegram WebApp –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω');
    }

    const user = getCurrentUser();
    if (!user) {
      throw new Error('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω');
    }

    const plan = SUBSCRIPTION_PLANS[planType];
    if (!plan) {
      throw new Error('–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Ç–∏–ø –ø–æ–¥–ø–∏—Å–∫–∏');
    }

    console.log('–ü–ª–∞–Ω –ø–æ–¥–ø–∏—Å–∫–∏:', plan);

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å openInvoice
    if (typeof webApp.openInvoice === 'function') {
      console.log('openInvoice –¥–æ—Å—Ç—É–ø–µ–Ω, –Ω–æ...');
    } else {
      console.log('openInvoice –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω');
    }

    // –í—Ä–µ–º–µ–Ω–Ω–æ –æ—Ç–∫–ª—é—á–∞–µ–º openInvoice –∏–∑-–∑–∞ –±–∞–≥–∞ –≤ Telegram WebApp
    console.log('openInvoice —Å–æ–¥–µ—Ä–∂–∏—Ç –±–∞–≥ –≤ —Ç–µ–∫—É—â–µ–π –≤–µ—Ä—Å–∏–∏ Telegram WebApp');
    console.log('–ò—Å–ø–æ–ª—å–∑—É–µ–º –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π –ø–æ–¥—Ö–æ–¥ —á–µ—Ä–µ–∑ –±–æ—Ç–∞...');

    // –°–æ–∑–¥–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–º–∏
    const message = `üí´ ${plan.title}

üí∞ –°—Ç–æ–∏–º–æ—Å—Ç—å: ${plan.amount} ‚≠ê –∑–≤–µ–∑–¥
üìù ${plan.description}

ü§ñ –î–ª—è –ø–æ–∫—É–ø–∫–∏ –ø–µ—Ä–µ–π–¥–∏—Ç–µ –≤ @iSpeechHelper_bot –∏ –Ω–∞–ø–∏—à–∏—Ç–µ:
/buy_${planType}

–ò–ª–∏ –ø—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏—Ç–µ /start –¥–ª—è –≤—ã–±–æ—Ä–∞ –ø–æ–¥–ø–∏—Å–∫–∏.`;

    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º popup —Å –≤—ã–±–æ—Ä–æ–º –¥–µ–π—Å—Ç–≤–∏–π
    if (typeof webApp.showPopup === 'function') {
      // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ñ–ª–∞–≥ —á—Ç–æ –ø–æ–ø–∞–ø –æ—Ç–∫—Ä—ã—Ç
      isPopupOpen = true;
      
      return new Promise((resolve) => {
        webApp.showPopup({
          title: 'üí≥ –ü–æ–∫—É–ø–∫–∞ –ø–æ–¥–ø–∏—Å–∫–∏',
          message: message,
          buttons: [
            {
              id: 'open_bot',
              type: 'default',
              text: 'ü§ñ –û—Ç–∫—Ä—ã—Ç—å –±–æ—Ç–∞'
            },
            {
              id: 'cancel',
              type: 'cancel',
              text: '–û—Ç–º–µ–Ω–∞'
            }
          ]
        }, (buttonId) => {
          // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Ñ–ª–∞–≥ –∫–æ–≥–¥–∞ –ø–æ–ø–∞–ø –∑–∞–∫—Ä—ã—Ç
          isPopupOpen = false;
          
          console.log('–í—ã–±—Ä–∞–Ω–∞ –∫–Ω–æ–ø–∫–∞:', buttonId);
          
          if (buttonId === 'open_bot') {
            console.log('–ü—ã—Ç–∞–µ–º—Å—è –æ—Ç–∫—Ä—ã—Ç—å –±–æ—Ç–∞...');
            
            // –£–±–∏—Ä–∞–µ–º –ø–æ–≤—Ç–æ—Ä–Ω–æ–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö
            console.log('URL –±–æ—Ç–∞ (–ø—Ä–æ—Å—Ç–æ–π):', botUrl);
            console.log('URL –±–æ—Ç–∞ (—Å –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–º):', botUrlWithStart);
            
            let opened = false;
            
            // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ø–ª–∞—Ç—Ñ–æ—Ä–º—É
            const platform = webApp.platform || 'unknown';
            const isIOS = platform === 'ios';
            const isAndroid = platform === 'android';
            const isMobile = isIOS || isAndroid;
            
            console.log('–ü–ª–∞—Ç—Ñ–æ—Ä–º–∞:', platform, '–ú–æ–±–∏–ª—å–Ω–æ–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ:', isMobile);
            
            // –î–ª—è –º–æ–±–∏–ª—å–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤ - –∏—Å–ø–æ–ª—å–∑—É–µ–º —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ —Å—Ö–µ–º—ã
            if (isMobile) {
              try {
                console.log('–ü—Ä–æ–±—É–µ–º –º–æ–±–∏–ª—å–Ω—É—é —Å—Ö–µ–º—É tg://...');
                const tgUrl = `tg://resolve?domain=iSpeechHelper_bot&start=buy_${planType}`;
                console.log('TG URL:', tgUrl);
                
                // –°–ø–æ—Å–æ–± 1: –ü—Ä—è–º–∞—è tg:// —Å—Ö–µ–º–∞
                if (typeof webApp.openTelegramLink === 'function') {
                  webApp.openTelegramLink(tgUrl);
                  opened = true;
                  console.log('‚úÖ –ú–æ–±–∏–ª—å–Ω–∞—è tg:// —Å—Ö–µ–º–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞');
                } else {
                  window.location.href = tgUrl;
                  opened = true;
                  console.log('‚úÖ –ú–æ–±–∏–ª—å–Ω–∞—è —Å—Ö–µ–º–∞ —á–µ—Ä–µ–∑ location.href –≤—ã–ø–æ–ª–Ω–µ–Ω–∞');
                }
              } catch (error) {
                console.error('‚ùå –û—à–∏–±–∫–∞ –º–æ–±–∏–ª—å–Ω–æ–π —Å—Ö–µ–º—ã:', error);
              }
            }
            
            // –°–ø–æ—Å–æ–± 1: openTelegramLink (–µ—Å–ª–∏ –µ—â–µ –Ω–µ –æ—Ç–∫—Ä—ã—Ç–æ)
            if (!opened && typeof webApp.openTelegramLink === 'function') {
              try {
                console.log('–ü—Ä–æ–±—É–µ–º openTelegramLink...');
                webApp.openTelegramLink(botUrlWithStart);
                opened = true;
                console.log('‚úÖ openTelegramLink –≤—ã–ø–æ–ª–Ω–µ–Ω');
              } catch (error) {
                console.error('‚ùå –û—à–∏–±–∫–∞ openTelegramLink:', error);
              }
            }
            
            // –°–ø–æ—Å–æ–± 2: openLink (–µ—Å–ª–∏ –ø–µ—Ä–≤—ã–π –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–ª)
            if (!opened && typeof webApp.openLink === 'function') {
              try {
                console.log('–ü—Ä–æ–±—É–µ–º openLink...');
                webApp.openLink(botUrlWithStart);
                opened = true;
                console.log('‚úÖ openLink –≤—ã–ø–æ–ª–Ω–µ–Ω');
              } catch (error) {
                console.error('‚ùå –û—à–∏–±–∫–∞ openLink:', error);
              }
            }
            
            // –°–ø–æ—Å–æ–± 3: sendData (–æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–æ–º—É –æ–∫–Ω—É)
            if (!opened && typeof webApp.sendData === 'function') {
              try {
                console.log('–ü—Ä–æ–±—É–µ–º sendData...');
                webApp.sendData(JSON.stringify({
                  action: 'open_bot',
                  url: botUrlWithStart,
                  planType: planType
                }));
                opened = true;
                console.log('‚úÖ sendData –≤—ã–ø–æ–ª–Ω–µ–Ω');
              } catch (error) {
                console.error('‚ùå –û—à–∏–±–∫–∞ sendData:', error);
              }
            }
            
            // –°–ø–æ—Å–æ–± 4: window.open (–ø–æ—Å–ª–µ–¥–Ω–∏–π —Ä–µ–∑–µ—Ä–≤)
            if (!opened) {
              try {
                console.log('–ü—Ä–æ–±—É–µ–º window.open...');
                window.open(botUrlWithStart, '_blank');
                opened = true;
                console.log('‚úÖ window.open –≤—ã–ø–æ–ª–Ω–µ–Ω');
              } catch (error) {
                console.error('‚ùå –û—à–∏–±–∫–∞ window.open:', error);
              }
            }
            
            // –°–ø–æ—Å–æ–± 4.5: –ü—Ä–æ—Å—Ç–∞—è —Å—Å—ã–ª–∫–∞ –Ω–∞ –±–æ—Ç–∞ –±–µ–∑ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤
            if (!opened) {
              try {
                console.log('–ü—Ä–æ–±—É–µ–º –ø—Ä–æ—Å—Ç—É—é —Å—Å—ã–ª–∫—É –Ω–∞ –±–æ—Ç–∞...');
                if (typeof webApp.openTelegramLink === 'function') {
                  webApp.openTelegramLink(botUrl);
                  opened = true;
                  console.log('‚úÖ –ü—Ä–æ—Å—Ç–∞—è —Å—Å—ã–ª–∫–∞ —á–µ—Ä–µ–∑ openTelegramLink –≤—ã–ø–æ–ª–Ω–µ–Ω–∞');
                } else if (typeof webApp.openLink === 'function') {
                  webApp.openLink(botUrl);
                  opened = true;
                  console.log('‚úÖ –ü—Ä–æ—Å—Ç–∞—è —Å—Å—ã–ª–∫–∞ —á–µ—Ä–µ–∑ openLink –≤—ã–ø–æ–ª–Ω–µ–Ω–∞');
                } else {
                  window.open(botUrl, '_blank');
                  opened = true;
                  console.log('‚úÖ –ü—Ä–æ—Å—Ç–∞—è —Å—Å—ã–ª–∫–∞ —á–µ—Ä–µ–∑ window.open –≤—ã–ø–æ–ª–Ω–µ–Ω–∞');
                }
              } catch (error) {
                console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ—Å—Ç–æ–π —Å—Å—ã–ª–∫–∏:', error);
              }
            }
            
            // –°–ø–æ—Å–æ–± 5: –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ —Å—Å—ã–ª–∫–∏ –≤ –±—É—Ñ–µ—Ä –æ–±–º–µ–Ω–∞
            if (!opened) {
              try {
                console.log('–ü—Ä–æ–±—É–µ–º —Å–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å —Å—Å—ã–ª–∫—É...');
                navigator.clipboard.writeText(botUrlWithStart).then(() => {
                  console.log('‚úÖ –°—Å—ã–ª–∫–∞ —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∞ –≤ –±—É—Ñ–µ—Ä –æ–±–º–µ–Ω–∞');
                  // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
                  if (typeof webApp.showAlert === 'function') {
                    webApp.showAlert('–°—Å—ã–ª–∫–∞ —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∞ –≤ –±—É—Ñ–µ—Ä –æ–±–º–µ–Ω–∞! –í—Å—Ç–∞–≤—å—Ç–µ –µ—ë –≤ Telegram –¥–ª—è –ø–µ—Ä–µ—Ö–æ–¥–∞ –∫ –±–æ—Ç—É.');
                  }
                  opened = true;
                }).catch((clipError) => {
                  console.error('‚ùå –û—à–∏–±–∫–∞ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è:', clipError);
                });
              } catch (error) {
                console.error('‚ùå –û—à–∏–±–∫–∞ clipboard:', error);
              }
            }
            
            // –ï—Å–ª–∏ –Ω–∏—á–µ–≥–æ –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–ª–æ
            if (!opened) {
              console.error('‚ùå –í—Å–µ —Å–ø–æ—Å–æ–±—ã –æ—Ç–∫—Ä—ã—Ç–∏—è –±–æ—Ç–∞ –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–ª–∏');
              if (typeof webApp.showAlert === 'function') {
                webApp.showAlert(`–ù–µ —É–¥–∞–ª–æ—Å—å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ—Ç–∫—Ä—ã—Ç—å –±–æ—Ç–∞. 
                
–ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤—Ä—É—á–Ω—É—é –≤ @iSpeechHelper_bot –∏ –Ω–∞–ø–∏—à–∏—Ç–µ:
/buy_${planType}

–ò–ª–∏ –ø—Ä–æ—Å—Ç–æ /start –¥–ª—è –≤—ã–±–æ—Ä–∞ –ø–æ–¥–ø–∏—Å–∫–∏.`);
              }
            }
            
            // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ç–∞–π–º–µ—Ä –¥–ª—è —Å–±—Ä–æ—Å–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è –ø–æ–∫—É–ø–∫–∏
            setTimeout(() => {
              console.log('‚è∞ –¢–∞–π–º–µ—Ä: —Å–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–∫—É–ø–∫–∏ —á–µ—Ä–µ–∑ 10 —Å–µ–∫—É–Ω–¥');
              // –≠–º–∏—Ç–∏—Ä—É–µ–º —Å–æ–±—ã—Ç–∏–µ –¥–ª—è —Å–±—Ä–æ—Å–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è
              if (typeof window !== 'undefined' && window.dispatchEvent) {
                const resetEvent = new CustomEvent('resetPurchaseState');
                window.dispatchEvent(resetEvent);
              }
            }, 10000); // 10 —Å–µ–∫—É–Ω–¥
            
            resolve({
              success: false,
              cancelled: false,
              redirected: opened,
              message: opened ? '–ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω –≤ –±–æ—Ç–∞ –¥–ª—è –ø–æ–∫—É–ø–∫–∏' : '–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–∫—Ä—ã—Ç—å –±–æ—Ç–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏'
            });
          } else {
            resolve({
              success: false,
              cancelled: true,
              status: 'cancelled'
            });
          }
        });
      });
    } 
    
    // Fallback –¥–ª—è —Å—Ç–∞—Ä—ã—Ö –≤–µ—Ä—Å–∏–π –±–µ–∑ showPopup
    else if (typeof webApp.showAlert === 'function') {
      // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ñ–ª–∞–≥ —á—Ç–æ –ø–æ–ø–∞–ø –æ—Ç–∫—Ä—ã—Ç
      isPopupOpen = true;
      
      return new Promise((resolve) => {
        webApp.showAlert(message, () => {
          // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Ñ–ª–∞–≥ –∫–æ–≥–¥–∞ –ø–æ–ø–∞–ø –∑–∞–∫—Ä—ã—Ç
          isPopupOpen = false;
          
          // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ—Ç–∫—Ä—ã–≤–∞–µ–º –±–æ—Ç–∞
          if (typeof webApp.openTelegramLink === 'function') {
            webApp.openTelegramLink(botUrlWithStart);
          }
          
          resolve({
            success: false,
            cancelled: false,
            redirected: true,
            message: '–ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω –≤ –±–æ—Ç–∞ –¥–ª—è –ø–æ–∫—É–ø–∫–∏'
          });
        });
      });
    } 
    
    // –ü–æ—Å–ª–µ–¥–Ω–∏–π fallback
    else {
      // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ñ–ª–∞–≥ —á—Ç–æ –ø–æ–ø–∞–ø –æ—Ç–∫—Ä—ã—Ç
      isPopupOpen = true;
      
      alert(message);
      
      // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Ñ–ª–∞–≥ –ø–æ—Å–ª–µ alert
      isPopupOpen = false;
      
      // –ü—ã—Ç–∞–µ–º—Å—è –æ—Ç–∫—Ä—ã—Ç—å —Å—Å—ã–ª–∫—É
      if (typeof webApp.openTelegramLink === 'function') {
        webApp.openTelegramLink(botUrlWithStart);
      } else if (typeof webApp.openLink === 'function') {
        webApp.openLink(botUrlWithStart);
      } else {
        window.open(botUrlWithStart, '_blank');
      }
      
      return {
        success: false,
        cancelled: false,
        redirected: true,
        message: '–ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω –≤ –±–æ—Ç–∞ –¥–ª—è –ø–æ–∫—É–ø–∫–∏'
      };
    }

  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∫—É–ø–∫–µ:', error);
    // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Ñ–ª–∞–≥ –≤ —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏
    isPopupOpen = false;
    throw error;
  }
};

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–≥–æ —Å–±—Ä–æ—Å–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è –ø–æ–ø–∞–ø–∞
export const resetPopupState = () => {
  isPopupOpen = false;
  console.log('üîÑ –°–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ø–∞–ø–∞ —Å–±—Ä–æ—à–µ–Ω–æ –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ');
};

const starsService = {
  isStarsAvailable,
  purchaseWithStars,
  resetPopupState,
  SUBSCRIPTION_PLANS,
};

export default starsService; 