import React, { useState, useEffect } from 'react';
import {
  Box,
  Typography,
  Container,
  Button,
  useTheme,

  CircularProgress,
  Modal,
  Fade,
  IconButton,
  Snackbar,
  Alert,
  Paper,
  Avatar,
} from '@mui/material';
import {
  Close as CloseIcon,
} from '@mui/icons-material';

import { verifyTelegramAuth, getCurrentUser } from '../services/telegram';
import { playSound } from '../services/sound';
import { vibrate } from '../services/vibration';
import TelegramLogin from '../components/TelegramLogin';
import { checkSubscriptionStatus } from '../services/subscription';
import { purchaseWithStars, isStarsAvailable } from '../services/stars';
import { useTranslation } from 'react-i18next';

import { getReferralStats, getReferralTransactions } from '../services/referral';
import ReferralProgram from '../components/ReferralProgram';
import TelegramStar3D from '../assets/telegram-star-3d.png';

const Account = () => {
  const theme = useTheme();
  const { t, i18n } = useTranslation();
  const [user, setUser] = useState(null);
  const [loading, setLoading] = useState(true);
  const [isInfoOpen, setIsInfoOpen] = useState(false);
  const [subscription, setSubscription] = useState(null);
  const [isPurchasing, setIsPurchasing] = useState(false);

  const [showCopied, setShowCopied] = useState(false);
  const [showError, setShowError] = useState(false);
  const [subscriptionError, setSubscriptionError] = useState('');

  // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (—Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω —Ä–∞–∑)
  useEffect(() => {
    try {
      const currentUser = getCurrentUser();
      setUser(currentUser);
      setLoading(false);

      if (!currentUser) {
        const script = document.createElement('script');
        script.src = 'https://telegram.org/js/telegram-widget.js?22';
        script.setAttribute('data-telegram-login', 'iSpeechHelperBot');
        script.setAttribute('data-size', 'large');
        script.setAttribute('data-radius', '8');
        script.setAttribute('data-request-access', 'write');
        script.setAttribute('data-userpic', 'true');
        script.setAttribute('data-lang', 'ru');
        script.setAttribute('data-onauth', 'onTelegramAuth(user)');
        script.async = true;
        
        const widgetDiv = document.getElementById('telegram-login-widget');
        if (widgetDiv) {
          widgetDiv.innerHTML = '';
          widgetDiv.appendChild(script);
        }

        window.onTelegramAuth = async (user) => {
          try {
            const userData = await verifyTelegramAuth(user);
            setUser(userData);
            playSound('success');
            vibrate('success');
          } catch (error) {
            console.error('–û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏:', error);
            playSound('error');
            vibrate('error');
          }
        };

        return () => {
          if (widgetDiv) widgetDiv.innerHTML = '';
          delete window.onTelegramAuth;
        };
      }
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏:', error);
      setLoading(false);
    }
  }, []); // –£–±–∏—Ä–∞–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—å –æ—Ç user

  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–ø–∏—Å–∫–∏ (—Ç–æ–ª—å–∫–æ –∫–æ–≥–¥–∞ user –∏–∑–º–µ–Ω—è–µ—Ç—Å—è)
  useEffect(() => {
    if (user) {
      const checkSubscription = async () => {
        try {
          const status = await checkSubscriptionStatus();
          if (status && status.error) {
            // –ù–µ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –æ—à–∏–±–∫–∏ —Ç–∞–π–º–∞—É—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
            if (!status.error.includes('–í—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è') && !status.error.includes('timeout')) {
            setSubscriptionError(status.error);
            }
          } else {
            setSubscription(status);
            setSubscriptionError(''); // –û—á–∏—â–∞–µ–º –æ—à–∏–±–∫—É –ø—Ä–∏ —É—Å–ø–µ—Ö–µ
          }
        } catch (error) {
          // –¢–∏—Ö–æ –ª–æ–≥–∏—Ä—É–µ–º –æ—à–∏–±–∫—É, –Ω–æ –Ω–µ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
          console.log('–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–ø–∏—Å–∫–∏ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞:', error.message);
          // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –¥–µ—Ñ–æ–ª—Ç–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–¥–ø–∏—Å–∫–∏ –ø—Ä–∏ –æ—à–∏–±–∫–µ
          setSubscription({
            isActive: false,
            type: null,
            expiresAt: null,
          });
        }
      };
      
      checkSubscription();
    }
  }, [user]);

  useEffect(() => {
    if (user) {
      const loadReferralData = async () => {
        try {
          await getReferralStats();
          await getReferralTransactions();
        } catch (error) {
          console.error('Error loading referral data:', error);
        }
      };
      loadReferralData();
    }
  }, [user]);

  useEffect(() => {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å Telegram Stars
    const available = isStarsAvailable();
    console.log('Telegram Stars –¥–æ—Å—Ç—É–ø–µ–Ω:', available);
    console.log('Telegram WebApp:', !!window.Telegram?.WebApp);
    console.log('showInvoice:', !!window.Telegram?.WebApp?.showInvoice);
    console.log('User:', !!user);
    console.log('isPurchasing:', isPurchasing);
  }, [user, isPurchasing]);

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–±—ã—Ç–∏—è —Å–±—Ä–æ—Å–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è –ø–æ–∫—É–ø–∫–∏
  useEffect(() => {
    const handleResetPurchaseState = () => {
      console.log('üîÑ –ü–æ–ª—É—á–µ–Ω–æ —Å–æ–±—ã—Ç–∏–µ —Å–±—Ä–æ—Å–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è –ø–æ–∫—É–ø–∫–∏');
      setIsPurchasing(false);
    };

    window.addEventListener('resetPurchaseState', handleResetPurchaseState);
    
    return () => {
      window.removeEventListener('resetPurchaseState', handleResetPurchaseState);
    };
  }, []);

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–±—ã—Ç–∏—è —Ñ–æ–∫—É—Å–∞ –æ–∫–Ω–∞ (–∫–æ–≥–¥–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç—Å—è)
  useEffect(() => {
    const handleWindowFocus = () => {
      console.log('üëÄ –û–∫–Ω–æ –ø–æ–ª—É—á–∏–ª–æ —Ñ–æ–∫—É—Å - –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–µ—Ä–Ω—É–ª—Å—è');
      if (isPurchasing) {
        console.log('üîÑ –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–∫—É–ø–∫–∏ –ø—Ä–∏ –≤–æ–∑–≤—Ä–∞—Ç–µ');
        setIsPurchasing(false);
        
        // –ü–µ—Ä–µ–ø—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –ø–æ–¥–ø–∏—Å–∫–∏
        if (user) {
          setTimeout(async () => {
            try {
              const status = await checkSubscriptionStatus();
              setSubscription(status);
    } catch (error) {
              console.log('–û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ–¥–ø–∏—Å–∫–∏ –ø—Ä–∏ –≤–æ–∑–≤—Ä–∞—Ç–µ:', error);
    }
          }, 1000); // –ù–µ–±–æ–ª—å—à–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –¥–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏
        }
      }
    };

    window.addEventListener('focus', handleWindowFocus);
    
    return () => {
      window.removeEventListener('focus', handleWindowFocus);
    };
  }, [isPurchasing, user]);

  useEffect(() => {
    if (user) {
      console.log('–¢–µ–∫—É—â–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:', user);
    }
  }, [user]);

  const handlePurchase = async (type) => {
    try {
      setIsPurchasing(true);
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
      if (!user) {
        console.log('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω');
        setSubscriptionError('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∞–≤—Ç–æ—Ä–∏–∑—É–π—Ç–µ—Å—å —á–µ—Ä–µ–∑ Telegram');
        return;
      }
      
      const result = await purchaseWithStars(type);
      
      if (result.success) {
        // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –ø–æ–¥–ø–∏—Å–∫–∏ –ø–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–π –ø–æ–∫—É–ø–∫–∏
        const updatedSubscription = await checkSubscriptionStatus();
        setSubscription(updatedSubscription);
        playSound('success');
        vibrate('success');
      } else if (result.cancelled) {
        // –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Ç–º–µ–Ω–∏–ª –ø–ª–∞—Ç–µ–∂ - –Ω–µ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –æ—à–∏–±–∫—É
        console.log('–ü–ª–∞—Ç–µ–∂ –æ—Ç–º–µ–Ω–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º');
      } else if (result.redirected) {
        // –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω –≤ –±–æ—Ç–∞ - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        console.log('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω –≤ –±–æ—Ç–∞ –¥–ª—è –ø–æ–∫—É–ø–∫–∏');
        playSound('success'); // –ü–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–π –∑–≤—É–∫, —Ç–∞–∫ –∫–∞–∫ —ç—Ç–æ –Ω–µ –æ—à–∏–±–∫–∞
      } else {
        console.error('–û—à–∏–±–∫–∞ –ø–ª–∞—Ç–µ–∂–∞:', result.error);
        playSound('error');
        vibrate('error');
        setSubscriptionError(result.error || result.message || '–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∫—É–ø–∫–µ –ø–æ–¥–ø–∏—Å–∫–∏');
      }
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∫—É–ø–∫–µ:', error);
      playSound('error');
      vibrate('error');
      setSubscriptionError(error.message || '–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∫—É–ø–∫–µ –ø–æ–¥–ø–∏—Å–∫–∏');
    } finally {
      setIsPurchasing(false);
    }
  };



  if (loading) {
    return (
      <Box sx={{ 
        height: '100vh', 
        width: '100%', 
        overflow: 'hidden',
        position: 'fixed',
        top: 0,
        left: 0,
        right: 0,
        bottom: 0,
        backgroundColor: theme.palette.background.default
      }}>
        <Container maxWidth="sm" sx={{ 
          height: '100%', 
          display: 'flex', 
          flexDirection: 'column',
          overflow: 'hidden',
          position: 'relative'
        }}>
          <Box sx={{ display: 'flex', justifyContent: 'center', alignItems: 'center', height: '60vh' }}>
            <CircularProgress color="primary" />
          </Box>
        </Container>
      </Box>
    );
  }

  return (
    <Box sx={{
      minHeight: '100vh',
      width: '100%',
      backgroundColor: theme.palette.background.default,
      overflowY: 'auto',
      paddingBottom: { xs: 0, sm: '72px' },
      display: 'flex',
      flexDirection: 'column',
    }}>
      <Container maxWidth="sm" sx={{
        display: 'flex',
        flexDirection: 'column',
        position: 'relative',
        py: { xs: 0, sm: 2 },
        px: { xs: 0, sm: 2 },
        flex: 1,
        width: '100%',
      }}>
        <Paper
          elevation={0}
          sx={{
            p: { xs: 2, sm: 3 },
            borderRadius: { xs: 0, sm: 3 },
            background: theme.palette.background.paper,
            border: { xs: 'none', sm: '1px solid' },
            borderColor: theme.palette.mode === 'dark'
              ? 'rgba(255, 255, 255, 0.1)'
              : 'rgba(0, 0, 0, 0.05)',
            width: '100%',
            maxWidth: '100%',
            mx: 0,
            mb: { xs: 0, sm: 2 },
            minHeight: { xs: '100vh', sm: 'auto' },
          }}
        >
          {user ? (
            <>
              <Avatar
                src={user.photo_url || undefined}
                alt={user.firstName || user.first_name || ''}
                sx={{
                  width: 96,
                  height: 96,
                  mx: 'auto',
                  mb: 2,
                  boxShadow: '0 2px 8px rgba(60,60,120,0.10)',
                  fontSize: 40,
                  bgcolor: theme.palette.primary.light,
                  color: theme.palette.primary.contrastText,
                }}
              >
                {!user.photo_url && ((user.firstName || user.first_name || 'U')[0])}
              </Avatar>
              <Typography variant="h6" fontWeight={600} mb={0.5} textAlign="center">
                {user.firstName} {user.lastName}
              </Typography>
              <Typography variant="body2" color="text.secondary" mb={2} textAlign="center">
                @{user.username}
              </Typography>
              
              {/* –°—Ç–∞—Ç—É—Å –ø–æ–¥–ø–∏—Å–∫–∏ */}
              {subscription && (
                <Box sx={{ mb: 2, textAlign: 'center' }}>
                  <Typography 
                    variant="subtitle2" 
                    color={subscription.isActive ? 'success.main' : 'text.secondary'}
                    sx={{ mb: 0.5 }}
                  >
                    {subscription.isActive 
                      ? t('premium_active', { date: new Date(subscription.expiresAt).toLocaleDateString() })
                      : t('no_active_subscription')}
                  </Typography>
                </Box>
              )}


            </>
          ) : (
            <TelegramLogin />
          )}
          <Button
            variant="outlined"
            onClick={() => setIsInfoOpen(true)}
            sx={{
              borderRadius: 30,
              px: 4,
              py: 1.2,
              fontWeight: 500,
              fontSize: '1rem',
              mt: 3,
              width: '100%',
              borderColor: theme.palette.primary.main,
              color: theme.palette.primary.main,
              '&:hover': {
                borderColor: theme.palette.primary.dark,
                backgroundColor: 'rgba(33, 150, 243, 0.04)',
              },
            }}
          >
            {t('about_app')}
          </Button>

          {/* –ë–ª–æ–∫ –ø–æ–¥–ø–∏—Å–æ–∫ */}
          <Box
            sx={{
              p: { xs: 2, sm: 3 },
              borderRadius: { xs: 2, sm: 3 },
              background: theme.palette.mode === 'dark'
                ? 'linear-gradient(135deg, #1a1a1a 0%, #2d2d2d 100%)'
                : 'linear-gradient(135deg, #fffefb 0%, #fffde4 100%)',
              border: `1px solid ${theme.palette.divider}`,
              mt: 3,
              width: '100%',
              maxWidth: '100%',
              display: 'flex',
              flexDirection: 'column',
              alignItems: 'center',
              justifyContent: 'flex-start',
            }}
          >
            <Typography
              variant="h6"
              sx={{
                mb: 2,
                color: theme.palette.primary.main,
                fontWeight: 'bold',
              }}
            >
              {t('premium')}
            </Typography>

            <Box sx={{
              display: 'flex',
              flexDirection: { xs: 'column', sm: 'row' },
              gap: 2,
              width: '100%',
              justifyContent: 'center',
            }}>
              {/* –ú–µ—Å—è—á–Ω–∞—è –ø–æ–¥–ø–∏—Å–∫–∞ */}
              <Box
                sx={{
                  p: 2,
                  borderRadius: 2,
                  border: '1px solid',
                  borderColor: theme.palette.divider,
                  width: { xs: '100%', sm: '30%' },
                  textAlign: 'center',
                  transition: 'all 0.3s ease',
                  display: 'flex',
                  flexDirection: 'column',
                  height: { xs: 'auto', sm: 240 },
                  justifyContent: 'space-between',
                  '&:hover': {
                    transform: 'translateY(-5px)',
                    boxShadow: '0 4px 20px rgba(0,0,0,0.1)',
                  },
                }}
              >
                <Box>
                  <Typography variant="h6" sx={{ mb: 1 }}>{t('month')}</Typography>
                  <Typography variant="h4" sx={{ mb: 1, color: theme.palette.primary.main, display: 'flex', alignItems: 'center', justifyContent: 'center' }}>
                    299 <span style={{ fontSize: 28, verticalAlign: 'middle', marginLeft: 4 }}>‚≠ê</span>
                  </Typography>
                </Box>
                <Button
                  variant="contained"
                  fullWidth
                  disabled={isPurchasing}
                  sx={{ mt: 2 }}
                  onClick={() => handlePurchase('MONTHLY')}
                >
                  {isPurchasing ? t('processing') : t('buy')}
                </Button>
              </Box>

              {/* –ö–≤–∞—Ä—Ç–∞–ª—å–Ω–∞—è –ø–æ–¥–ø–∏—Å–∫–∞ */}
              <Box
                sx={{
                  p: 2,
                  borderRadius: 2,
                  border: '1px solid',
                  borderColor: theme.palette.divider,
                  width: { xs: '100%', sm: '30%' },
                  textAlign: 'center',
                  transition: 'all 0.3s ease',
                  display: 'flex',
                  flexDirection: 'column',
                  height: { xs: 'auto', sm: 240 },
                  justifyContent: 'space-between',
                  '&:hover': {
                    transform: 'translateY(-5px)',
                    boxShadow: '0 4px 20px rgba(0,0,0,0.1)',
                  },
                }}
              >
                <Box>
                  <Typography variant="h6" sx={{ mb: 1 }}>{t('quarter')}</Typography>
                  <Typography variant="h4" sx={{ mb: 1, color: theme.palette.primary.main, display: 'flex', alignItems: 'center', justifyContent: 'center' }}>
                    699 <span style={{ fontSize: 28, verticalAlign: 'middle', marginLeft: 4 }}>‚≠ê</span>
                  </Typography>
                  <Typography variant="body2" sx={{ color: 'success.main', mb: 1 }}>
                    {t('discount_20')}
                  </Typography>
                </Box>
                <Button
                  variant="contained"
                  fullWidth
                  disabled={isPurchasing}
                  sx={{ mt: 2 }}
                  onClick={() => handlePurchase('QUARTERLY')}
                >
                  {isPurchasing ? t('processing') : t('buy')}
                </Button>
              </Box>

              {/* –ì–æ–¥–æ–≤–∞—è –ø–æ–¥–ø–∏—Å–∫–∞ */}
              <Box
                sx={{
                  p: 2,
                  borderRadius: 2,
                  border: '1px solid',
                  borderColor: theme.palette.divider,
                  width: { xs: '100%', sm: '30%' },
                  textAlign: 'center',
                  transition: 'all 0.3s ease',
                  display: 'flex',
                  flexDirection: 'column',
                  height: { xs: 'auto', sm: 240 },
                  justifyContent: 'space-between',
                  '&:hover': {
                    transform: 'translateY(-5px)',
                    boxShadow: '0 4px 20px rgba(0,0,0,0.1)',
                  },
                }}
              >
                <Box>
                  <Typography variant="h6" sx={{ mb: 1 }}>{t('year')}</Typography>
                  <Typography variant="h4" sx={{ mb: 1, color: theme.palette.primary.main, display: 'flex', alignItems: 'center', justifyContent: 'center' }}>
                    1999 <span style={{ fontSize: 28, verticalAlign: 'middle', marginLeft: 4 }}>‚≠ê</span>
                  </Typography>
                  <Typography variant="body2" sx={{ color: 'success.main', mb: 1 }}>
                    {t('discount_40')}
                  </Typography>
                </Box>
                <Button
                  variant="contained"
                  fullWidth
                  disabled={isPurchasing}
                  sx={{ mt: 2 }}
                  onClick={() => handlePurchase('YEARLY')}
                >
                  {isPurchasing ? t('processing') : t('buy')}
                </Button>
              </Box>
            </Box>
          </Box>
        </Paper>

        <Modal
          open={isInfoOpen}
          onClose={() => setIsInfoOpen(false)}
          closeAfterTransition
          sx={{
            display: 'flex',
            alignItems: 'center',
            justifyContent: 'center',
          }}
        >
          <Fade in={isInfoOpen}>
            <Paper
              sx={{
                position: 'relative',
                width: '90%',
                maxWidth: 400,
                maxHeight: '80vh',
                overflow: 'auto',
                p: 3,
                borderRadius: 2,
                bgcolor: 'background.paper',
              }}
            >
              <IconButton
                onClick={() => setIsInfoOpen(false)}
                sx={{
                  position: 'absolute',
                  right: 8,
                  top: 8,
                }}
              >
                <CloseIcon fontSize="small" />
              </IconButton>
              <Typography variant="h6" gutterBottom>
                {t('about_app')}
              </Typography>
              <Typography variant="body2" color="text.secondary" paragraph style={{ whiteSpace: 'pre-line' }}>
                {i18n.language === 'ru' && `iSpeech Helper ‚Äî —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–ª—è –ø–æ–º–æ—â–∏ –ª—é–¥—è–º —Å –Ω–∞—Ä—É—à–µ–Ω–∏—è–º–∏ —Ä–µ—á–∏. –û–Ω–æ —Å–æ–∑–¥–∞–Ω–æ –¥–ª—è —É–ª—É—á—à–µ–Ω–∏—è –¥–∏–∫—Ü–∏–∏, –∞—Ä—Ç–∏–∫—É–ª—è—Ü–∏–∏ –∏ –æ–±—â–µ–≥–æ –∫–∞—á–µ—Å—Ç–≤–∞ —Ä–µ—á–∏ —Å –ø–æ–º–æ—â—å—é –Ω–∞–±–æ—Ä–∞ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω—ã—Ö —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–π. –û—Å–Ω–æ–≤–Ω—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏: 

‚òÖ –î–∏–∞—Ñ—Ä–∞–≥–º–∞–ª—å–Ω—ã–µ –¥—ã—Ö–∞—Ç–µ–ª—å–Ω—ã–µ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è ‚Äî —Ä–∞–∑–≤–∏–≤–∞—é—Ç –∫–æ–Ω—Ç—Ä–æ–ª—å –Ω–∞–¥ –¥—ã—Ö–∞–Ω–∏–µ–º, —Å–ø–æ—Å–æ–±—Å—Ç–≤—É—é—Ç –ø–ª–∞–≤–Ω–æ—Å—Ç–∏ —Ä–µ—á–∏. 
‚òÖ –°–∫–æ—Ä–æ–≥–æ–≤–æ—Ä–∫–∏ ‚Äî —Ç—Ä–µ–Ω–∏—Ä—É—é—Ç –¥–∏–∫—Ü–∏—é, –∞—Ä—Ç–∏–∫—É–ª—è—Ü–∏—é –∏ —á—ë—Ç–∫–æ—Å—Ç—å –ø—Ä–æ–∏–∑–Ω–æ—à–µ–Ω–∏—è. 
‚òÖ –¢—Ä–µ–Ω–∞–∂—ë—Ä —ç–º–æ—Ü–∏–π ‚Äî —É—á–∏—Ç –≤—ã—Ä–∞–∂–∞—Ç—å —á—É–≤—Å—Ç–≤–∞ –≥–æ–ª–æ—Å–æ–º, –¥–µ–ª–∞–µ—Ç —Ä–µ—á—å –±–æ–ª–µ–µ –≤—ã—Ä–∞–∑–∏—Ç–µ–ª—å–Ω–æ–π. 
‚òÖ –ü–ª–∞–≤–Ω–æ–µ —á—Ç–µ–Ω–∏–µ ‚Äî –ø–æ–º–æ–≥–∞–µ—Ç —Ä–∞–∑–≤–∏—Ç—å —Ä–∏—Ç–º –∏ –ø–ª–∞–≤–Ω–æ—Å—Ç—å —Ä–µ—á–∏, —Å–Ω–∏–∂–∞–µ—Ç –∑–∞–∏–∫–∞–Ω–∏–µ. 
‚òÖ –ß—Ç–µ–Ω–∏–µ —Å –º–µ—Ç—Ä–æ–Ω–æ–º–æ–º ‚Äî —Ñ–æ—Ä–º–∏—Ä—É–µ—Ç –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ç–µ–º–ø –∏ —Ä–∏—Ç–º–∏—á–Ω–æ—Å—Ç—å —Ä–µ—á–∏. 
‚òÖ DAF/MAF ‚Äî —Ç–µ—Ö–Ω–∏–∫–∏ –æ–±—Ä–∞—Ç–Ω–æ–π –∞—É–¥–∏–æ—Å–≤—è–∑–∏ –∏ –Ω–∞–ª–æ–∂–µ–Ω–∏—è —à—É–º–∞ –¥–ª—è –∫–æ–Ω—Ç—Ä–æ–ª—è —Å–∫–æ—Ä–æ—Å—Ç–∏ –∏ –ø–ª–∞–≤–Ω–æ—Å—Ç–∏ —Ä–µ—á–∏. 

–ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞: 
- –†–µ–≥—É–ª—è—Ä–Ω—ã–µ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏ –∑–∞–º–µ—Ç–Ω–æ —É–ª—É—á—à–∞—é—Ç —Ä–∞–∑–±–æ—Ä—á–∏–≤–æ—Å—Ç—å –∏ –≤—ã—Ä–∞–∑–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å —Ä–µ—á–∏. 
- –ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –ø–æ–¥–±–æ—Ä —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–π –ø–æ–¥ –≤–∞—à–∏ —Ü–µ–ª–∏. 
- –°–∏—Å—Ç–µ–º–∞ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ –∏ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π. 
- –ü—Ä–æ—Å—Ç–æ–π –∏ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–ª—è –≤—Å–µ—Ö –≤–æ–∑—Ä–∞—Å—Ç–æ–≤. 
- –ü–æ–¥–¥–µ—Ä–∂–∫–∞ —Ä—É—Å—Å–∫–æ–≥–æ –∏ –∞–Ω–≥–ª–∏–π—Å–∫–æ–≥–æ —è–∑—ã–∫–æ–≤.`}
                {i18n.language === 'en' && `iSpeech Helper is a specialized application designed to help people with speech disorders. It is created to improve diction, articulation, and overall speech quality through a set of effective exercises.

                Key Features:

‚òÖ Diaphragmatic breathing exercises ‚Äî develop breath control and promote smooth speech.
‚òÖ Tongue twisters ‚Äî train diction, articulation, and clarity of pronunciation.
‚òÖ Emotion trainer ‚Äî teaches how to express feelings with your voice, making speech more expressive.
‚òÖ Smooth reading ‚Äî helps develop rhythm and fluency, reduces stuttering.
‚òÖ Metronome-assisted reading ‚Äî builds correct tempo and speech rhythm.
‚òÖ DAF/MAF ‚Äî delayed auditory feedback and masking techniques for controlling speech rate and fluency.

                Benefits:
- Regular practice significantly improves speech clarity and expressiveness.
- Personalized exercise selection for your goals.
- Progress tracking and achievement system.
- Simple and modern interface for all ages.
- Support for Russian and English languages.`}
              </Typography>
            </Paper>
          </Fade>
        </Modal>

        <ReferralProgram />

        <Snackbar
          open={showCopied}
          autoHideDuration={3000}
          onClose={() => setShowCopied(false)}
        >
          <Alert severity="success" onClose={() => setShowCopied(false)}>
            {t('copied_to_clipboard')}
          </Alert>
        </Snackbar>

        <Snackbar
          open={showError}
          autoHideDuration={3000}
          onClose={() => setShowError(false)}
        >
          <Alert severity="error" onClose={() => setShowError(false)}>
            {t('error_occurred')}
          </Alert>
        </Snackbar>

        <Snackbar
          open={!!subscriptionError}
          autoHideDuration={6000}
          onClose={() => setSubscriptionError('')}
          anchorOrigin={{ vertical: 'top', horizontal: 'center' }}
        >
          <Alert severity="error" onClose={() => setSubscriptionError('')} sx={{ width: '100%' }}>
            {subscriptionError}
          </Alert>
        </Snackbar>
      </Container>
    </Box>
  );
};

export default Account; 